%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2170_04
  m_EditorClassIdentifier: 
  question: How can you ensure that an object of a base class type can be safely
    converted to a derived class type?
  optionList:
  - By using the is keyword to check if the conversion is possible.
  - By always using the as keyword for conversion to handle any potential failure.
  - By implementing an interface in both the base and derived classes.
  correctOptionIndex: 0
  answer: "Before you do some type conversion you should test that the conversion
    you're trying to do will actually work.\n##REF##code,\r\nBaseUnit baseUnit =
    new Player();\r\nif (baseUnit is Player) {\r\n    Player player = baseUnit as
    Player;\r\n}\r\n##REF##"
