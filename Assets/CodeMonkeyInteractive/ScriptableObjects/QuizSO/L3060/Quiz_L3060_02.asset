%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L3060_02
  m_EditorClassIdentifier: 
  question: Why should you use the nameof operator instead of hardcoding string literals?
  optionList:
  - It ensures the string is always correct, especially during refactoring.
  - It improves the execution speed of the program.
  - It encrypts the string values for security purposes.
  - It automatically translates strings based on the user's locale.
  correctOptionIndex: 0
  answer: 'If you hardcode a string you can make all the usual string mistakes like
    case-sensitive, visually looking similar even though I and l are completely different.

    And
    if you refactor your code then your hardcoded string will suddenly be wrong.

    Whereas
    with nameof you get a compiler error if you write the name incorrectly and it
    automatically updates if you refactor.

'
