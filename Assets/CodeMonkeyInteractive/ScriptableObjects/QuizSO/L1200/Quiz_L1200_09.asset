%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L1200_09
  m_EditorClassIdentifier: 
  question: Why is explicit use of access modifiers important?
  optionList:
  - To improve the performance of the program.
  - To clearly communicate the intended accessibility of class members.
  - To automatically generate documentation.
  - To enable polymorphism.
  correctOptionIndex: 1
  answer: 'Being explicit with your access modifiers makes the code easier to read.
    There is never any doubt as to whether something is public or private, it''s
    written right there.

    Whereas if you omit the access modifier, in a class
    it will default to private, in an interface it will default to public, in a class
    it will default to internal.

    So to avoid any confusion, always include
    the access modifier.

'
