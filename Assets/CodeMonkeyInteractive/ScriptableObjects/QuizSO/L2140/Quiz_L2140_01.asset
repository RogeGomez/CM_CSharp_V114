%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2140_01
  m_EditorClassIdentifier: 
  question: What is a key difference between structs and classes in C#?
  optionList:
  - Structs can inherit from other structs or classes.
  - Structs are reference types, while classes are value types.
  - Structs are value types, while classes are reference types.
  - Only classes can implement interfaces.
  correctOptionIndex: 2
  answer: 'The big difference is how structs are value types (which means they are
    passed in as a copy) whereas classes are reference types.

'
