%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2180_02
  m_EditorClassIdentifier: 
  question: How can you use switch pattern matching to handle different types?
  optionList:
  - By using the typeof operator in each case statement.
  - By specifying the type and a variable name in each case statement.
  - By casting the switch expression to each desired type.
  - By using the is keyword inside each case statement.
  correctOptionIndex: 1
  answer: "You just define the type and then optionally a variable name, if the switch
    variable is castable to that type then it will cast and assign the result to
    that variable.\r\nIf you just want to test the type and don't care about the
    variable name you can just write an underscore _ for the name\n##REF##code,\r\ncase
    MyClass _:\r\n    // Do something\r\n    break;\r\n##REF##"
