%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2230_08
  m_EditorClassIdentifier: 
  question: What is a true statement about readonly and const in C#?
  optionList:
  - readonly is a newer feature than const and is intended to replace it.
  - readonly allows for runtime initialization, whereas const is for compile-time
    constants.
  - const can hold any type, including instances of custom classes, while readonly
    is limited to primitive types.
  - Both readonly and const fields can be modified within instance methods of the
    class.
  correctOptionIndex: 1
  answer: 'Use const when you want a constant with a value that can be defined at
    compile-time, and use readonly when you want a constant with a value that can
    only be defined at runtime.

'
