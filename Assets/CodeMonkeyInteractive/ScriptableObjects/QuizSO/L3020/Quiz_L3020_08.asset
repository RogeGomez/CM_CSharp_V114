%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L3020_08
  m_EditorClassIdentifier: 
  question: Can Reflection be used to access private functions?
  optionList:
  - Yes, but it is generally not recommended to bypass encapsulation principles
  - No, Reflection can only access public members
  - Yes, but only if the application is running in administrator mode
  - No, Reflection only allows invoking static functions
  correctOptionIndex: 0
  answer: 'Yup this is one possible use case for reflection, you can bypass any access
    modifiers.

    This can be quite useful when writing some testing code where
    you want to also test your private functions and fields.

    However in general
    you should not abuse this. If something is marked as private then that means
    normal code should not access it.

'
