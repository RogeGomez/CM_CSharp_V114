%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L3070_03
  m_EditorClassIdentifier: 
  question: How does Marshal.SizeOf() differ from sizeof?
  optionList:
  - Marshal.SizeOf() can evaluate the size of reference types based on the instance.
  - sizeof can be used without including any namespaces.
  - Marshal.SizeOf() returns the size in bits rather than bytes.
  correctOptionIndex: 0
  answer: The Marshal class is used for handling managed and unmanaged data, so it's
    what you use to get the size of a reference type like a class.
