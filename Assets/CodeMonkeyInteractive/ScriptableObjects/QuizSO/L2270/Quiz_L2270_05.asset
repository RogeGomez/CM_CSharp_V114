%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2270_05
  m_EditorClassIdentifier: 
  question: Which Unity-specific method is commonly used to assign the Singleton
    instance?
  optionList:
  - Start()
  - Update()
  - Awake()
  - OnEnable()
  correctOptionIndex: 2
  answer: 'In Unity since you cannot use the constructor on classes that extend MonoBehaviour,
    usually you let Unity create the object for you and just assign the static instance
    through the Awake() function which is called immediately after the object is
    constructed.

    This means it won''t feature Lazy Initialization, if you need
    that then one alternative would be to implement the same lazy logic but instead
    of calling the constructor you would instantiate some prefab of that object,
    possibly through Resources.Load();

'
