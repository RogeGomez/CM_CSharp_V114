%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L2210_07
  m_EditorClassIdentifier: 
  question: How can you pass data with an event in C#?
  optionList:
  - By using the params keyword in the event declaration.
  - By using a delegate that contains whatever parameters you want.
  - By storing data in global variables accessible by the event handler.
  correctOptionIndex: 1
  answer: "You can use any delegate with any number and type of parameters as you
    want.\r\nIf you follow the C# standard and use EventHandler, then the correct
    way is to define a class that extends EventArgs and use the generic version of
    EventHandler<T> that uses that class.\n##REF##code,\r\npublic class OnDamagedEventArgs
    : EventArgs {\r\n    public int damageAmount;\r\n}\r\npublic event EventHandler<OnDamagedEventArgs>
    OnDamaged;\r\n##REF##"
