%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L3210_03
  m_EditorClassIdentifier: 
  title: What are the performance implications of boxing and unboxing?
  text: Boxing and unboxing are relatively expensive in terms of performance. Boxing
    involves copying the value and allocating new memory on the heap, while unboxing
    involves type checking and casting. Frequent use of boxing and unboxing can lead
    to increased garbage collection and can affect the performance of your program.
