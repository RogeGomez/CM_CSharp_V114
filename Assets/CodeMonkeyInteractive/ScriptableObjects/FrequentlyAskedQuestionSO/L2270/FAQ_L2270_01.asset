%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L2270_01
  m_EditorClassIdentifier: 
  title: When is it appropriate to use a Singleton pattern?
  text: 'Whenever you have some type where only one single instance is meant to exist.

    Like
    for example usually in game you have a single GameManager class, perhaps just
    one AudioManager class, perhaps in a singleplayer game just one Player class,
    etc.

    The singleton pattern makes that single instance really easy to access
    which can be very helpful.

'
