%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L2270_06
  m_EditorClassIdentifier: 
  title: How can singletons be abused?
  text: 'They can increase code coupling if you have tons of singletons being used
    by tons of different classes.

    They can also make testing harder, since
    you need to at least create mocks of those singleton objects in order to test
    some code.

    And they can make multi-threaded code much more difficult due
    to issues with accessing and modifying a single object from multiple parts of
    code.

    All of those potential issues can be avoided/minimized by writing
    better clean code, just because you can access every singleton from everywhere
    does not mean you should.

    The singleton is merely a tool, and as with any
    tool it can be used or abused. So don''t be afraid of singletons but also don''t
    abuse them.

'
