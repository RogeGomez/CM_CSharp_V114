%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L2170_05
  m_EditorClassIdentifier: 
  title: What is boxing and unboxing in C#?
  text: 'This is how you can take any object of any type, like an int or Player,
    and place it inside the C# object type

    ##REF##code,

    object obj = (object)myInt;
    // Valid

    ##REF##

    Doing so makes the obj a reference type which holds
    a pointer that points to the myInt value.

    Unboxing is the opposite, converting
    an object into some other type.

    ##REF##code,

    int myInt = (int)obj;

    ##REF##

    Since
    object is the base type for any type in C# this can sometimes be useful when
    you don''t know exactly what object type you''re working with. Although it should
    only ever be used with care.

    There is a lecture on boxing in the Advanced
    section.

'
