%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L1180_02
  m_EditorClassIdentifier: 
  title: Is a Class the same as a Type?
  text: 'Sort of, making your own Class is a way of making your own Type.

    For
    example when I say "function parameters can have any type you want" yup that
    means you can define a class and use that class type as a function parameter
    or variable or anything where you can use a type.

    But there are also other
    ways to make types, like Enums and Structs, which I will cover in detail in the
    Intermediate section.

'
