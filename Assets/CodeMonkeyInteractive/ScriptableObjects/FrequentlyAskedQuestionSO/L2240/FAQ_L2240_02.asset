%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L2240_02
  m_EditorClassIdentifier: 
  title: How do try, catch, and finally blocks work in C#?
  text: 'When an exception happens the code will stop running automatically.

    However
    you can wrap some code inside a try block, and if an exception happens it will
    only stop executing the rest of that try block and continue afterwards.

    If
    you also define one or multiple catch blocks you can run code depending on the
    exception type that happened.

    And if you write a finally block, that code
    will always run, even if you call return; inside the try or catch. Usually finally
    is used for clean up.

'
