%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L1190_02
  m_EditorClassIdentifier: 
  title: How does a static method differ from a non-static method?
  text: 'A Static method belongs to the class itself and not any instance of that
    class.

    So to call that method you call it through the class name itself.

    For
    example if this function is defined in a Player class, you call it like this:

    ##REF##code,

    public
    static void TestFunction() { }

    ---------------

    Player.TestFunction();

    ##REF##

    If
    you do this following code it will give an error because you cannot access a
    static function from an instance of the class.

    ##REF##code,

    Player
    player = new Player();

    player.TestFunction();

    ##REF##'
