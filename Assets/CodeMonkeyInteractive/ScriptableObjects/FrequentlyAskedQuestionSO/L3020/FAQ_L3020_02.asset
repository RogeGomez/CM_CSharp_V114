%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L3020_02
  m_EditorClassIdentifier: 
  title: Why would you use reflection?
  text: 'Reflection is useful when you need to work with types and members dynamically,
    like when you don''t know the specific classes and functions you will need to
    interact with at compile time.

    One practical example is the Interactive
    Exercises on this project. Some exercises require you to define some class which
    means the code needs to dynamically look for that class instead of being hardcoded
    which would throw a compile error because when the exercise starts the class
    is not defined.

    It''s also used in scenarios like plugin systems, where
    code needs to be loaded and executed dynamically.'
