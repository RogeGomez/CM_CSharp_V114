%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L1130_12
  m_EditorClassIdentifier: 
  title: How does modifying a parameter within a function affect the original value?
  text: "It depends on what the type is. For simple types like int, float, bool,
    it does not affect the original memory at all\n##REF##code,\nint age = 35;\nChangeAge(35);\nConsole.WriteLine(age);
    // Still 35\n------------\nvoid ChangeAge(int age) {\n    age++;\n}\r\n##REF##\nHowever
    for reference types, like List and Classes, those are passed in as a reference
    so if you modify them inside the function it will modify them outside of it.\n##REF##code,\nList<int>
    myList = new List<int>();\nChangeList(myList);\nConsole.WriteLine(myList.Count);
    // 1, not 0\n-----------------\nvoid ChangeList(List<int> myList) {\n    myList.Add(5);\n}\r\n##REF##\nThis
    difference between Value and Reference types is really important, there is a
    dedicated lecture on this topic later on in the Intermediate section.\n"
