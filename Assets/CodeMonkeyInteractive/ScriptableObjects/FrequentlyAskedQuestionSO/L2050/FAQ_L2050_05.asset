%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b77bfb2ebc4ee664ab63408f6b18e046, type: 3}
  m_Name: FAQ_L2050_05
  m_EditorClassIdentifier: 
  title: What does it mean to have different access modifiers for the getter and
    setter, and how is it useful?
  text: 'It means how for example you can make the get; public so any class can get
    that property, but leave the set; as private so only that class can set it.

    This
    is especially useful in implementing the singleton pattern where you need the
    class that creates the singleton to assign it, but any class should be able to
    get it.

    ##REF##code,

    public static Player Instance { get; private set;
    }

    ##REF##'
