%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L1130_FunctionOverloading
  m_EditorClassIdentifier: 
  exerciseName: FunctionOverloading
  exerciseTitle: Function Overloading
  exerciseText: 'Write a function named PrintMessage, that takes in a string and
    logs it to the console with Debug.Log();

    Then write another function with
    the exact same name that does the same thing but takes an int parameter.'
  hintText: 'Define a void PrintMessage(string message) that does a Debug.Log(message);
    then same thing for a second version of that function that works with int.

    Remember
    type conversion, to get an int from a string do int.ToString();

'
  solutionText: "private void PrintMessage(string message) {\r\n    Debug.Log(message);\r\n}\n\r\nprivate
    void PrintMessage(int number) {\r\n    Debug.Log(number.ToString());\r\n}"
  completedText: Here you learned how you can define multiple functions with the
    same name as long as they have different parameter types or different number
    of parameters.
  videoWalkthroughLink: https://www.youtube.com/watch?v=JDePCKlDP9o
