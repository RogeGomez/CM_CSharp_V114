%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L2150_BasicInheritance
  m_EditorClassIdentifier: 
  exerciseName: BasicInheritance
  exerciseTitle: Basic Inheritance
  exerciseText: 'Define a base Unit class with a GetSpeed(); function that should
    return 3

    Then define a Enemy class that inherits from Unit

    Then define
    a Player class that inherits from Unit and should override the GetSpeed(); to
    return 5'
  hintText: 'Remember the syntax for inheritance. First you define a base class,
    then define the other classes and extend the base class with : BaseClass

    In
    order to provide a different implementation for some function, the base function
    needs to be marked as ''virtual'' and the extended function needs to be marked
    as ''override'''
  solutionText: "private class Unit {\r\n    public virtual int GetSpeed() {\r\n       
    return 3;\r\n    }\r\n}\n\r\n// Define a Enemy class that inherits from Unit\r\nprivate
    class Enemy : Unit {\r\n}\r\n\r\n// Define a Player class that inherits from
    Unit and overrides the GetSpeed(); function to return 5\r\nprivate class Player
    : Unit {\r\n    public override int GetSpeed() {\r\n        return 5;\r\n   
    }\r\n}"
  completedText: Here you learned how to implement basic inheritance where you have
    a base class and then classes that extend that base class and override some logic
    to provide a different implementation.
  videoWalkthroughLink: https://www.youtube.com/watch?v=S0QdxIPqCUQ
