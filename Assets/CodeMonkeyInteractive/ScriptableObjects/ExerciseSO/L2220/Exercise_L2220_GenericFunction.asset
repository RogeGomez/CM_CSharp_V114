%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L2220_GenericFunction
  m_EditorClassIdentifier: 
  exerciseName: GenericFunction
  exerciseTitle: Define Generic Function
  exerciseText: Define a generic function, PrintObject<T1, T2> that takes those types
    as parameters and does a Debug.Log(t1 + " " + t2);
  hintText: Generic functions are just like generic classes.
  solutionText: "public void PrintObject<T1, T2>(T1 t1, T2 t2) {\r\n    Debug.Log(t1
    + \" \" + t2);\r\n}"
  completedText: Here you learned how to define a generic function, this can be really
    useful when you want to use generics but don't want to mark the entire class
    as generic.
  videoWalkthroughLink: https://www.youtube.com/watch?v=ejTQJgOISfc
