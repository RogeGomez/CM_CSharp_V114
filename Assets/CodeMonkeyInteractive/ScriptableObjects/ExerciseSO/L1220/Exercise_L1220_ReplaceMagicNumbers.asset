%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L1220_ReplaceMagicNumbers
  m_EditorClassIdentifier: 
  exerciseName: ReplaceMagicNumbers
  exerciseTitle: Replace Magic Numbers
  exerciseText: Replace the magic numbers in this code with properly named local
    variables.
  hintText: Define local variables of the same type as the magic numbers but with
    proper names that clearly indicate what that value is meant to represent.
  solutionText: "private void TakePlayerAction(Enemy enemy) {\r\n    int damageAmount
    = 10;\r\n    if (IsSuper()) {\r\n        int superDamageMultiplier = 2;\r\n       
    damageAmount *= superDamageMultiplier;\r\n    }\r\n    float distance = Vector3.Distance(transform.position,
    enemy.GetPosition());\r\n    float attackDistance = 5f;\r\n    if (distance <
    attackDistance) {\r\n        enemy.Attack(damageAmount);\r\n    } else {\r\n       
    // Enemy too far\r\n        float jumpDistance = 10f;\r\n        if (distance
    > jumpDistance) {\r\n            Jump();\r\n        } else {\r\n            MoveTowardsEnemy();\r\n       
    }\r\n    }\r\n}"
  completedText: 'Here you learned to take a simple refactoring action, replace magic
    numbers with properly named variables.

    Now the code still does the same
    thing but is much easier to read and understand.'
  videoWalkthroughLink: https://www.youtube.com/watch?v=RqgTuxYM04M
