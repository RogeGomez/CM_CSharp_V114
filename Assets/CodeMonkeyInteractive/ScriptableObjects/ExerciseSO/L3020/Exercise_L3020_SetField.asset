%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L3020_SetField
  m_EditorClassIdentifier: 
  exerciseName: SetField
  exerciseTitle: Set field with Reflection
  exerciseText: Set the Player.playerName field to "Code Monkey" using reflection
  hintText: Explore the functions inside the System.Type object to see how to get
    fields and then all the things you can do with a FieldInfo.
  solutionText: 'FieldInfo playerNameFieldInfo = typeof(Player).GetField("playerName",
    BindingFlags.NonPublic | BindingFlags.Instance);



    playerNameFieldInfo.SetValue(player,
    "Code Monkey");'
  completedText: Here you learned how to set a field using reflection. The same logic
    applies for reading the field.
  videoWalkthroughLink: https://www.youtube.com/watch?v=sJPppeqgvAE
