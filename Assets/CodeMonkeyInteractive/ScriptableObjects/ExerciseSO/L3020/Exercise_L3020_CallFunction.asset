%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 37e24839d78e00c4aa3ef4e0e593ae05, type: 3}
  m_Name: Exercise_L3020_CallFunction
  m_EditorClassIdentifier: 
  exerciseName: CallFunction
  exerciseTitle: Call a Function
  exerciseText: Invoke the function player.TakeDamage(); using reflection.
  hintText: Remember the syntax for the Invoke function, how it requires the target
    object where the function will run, and an object[] for the parameters.
  solutionText: typeof(Player).GetMethod("TakeDamage").Invoke(player, null);
  completedText: In this exercise you learned how to invoke a function using reflection.
    This is super useful to know especially when working with some dynamically loaded
    code where you need to interact with it using reflection.
  videoWalkthroughLink: https://www.youtube.com/watch?v=uxCJgEbXPuw
